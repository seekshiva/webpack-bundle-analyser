// Generated by ReScript, PLEASE EDIT WITH CARE

import * as $$Text from "./components/Text.bs.js";
import * as React from "react";
import * as ChunkList from "./components/ChunkList.bs.js";
import * as ReactNative from "react-native";
import * as AppFilesJs from "./AppFiles.js";
import * as ReactRouterDom from "react-router-dom";

function useStatJSON(prim) {
  return AppFilesJs.useStatJSON();
}

var make = AppFilesJs.ShowChunk;

var ShowChunk = {
  make: make
};

var make$1 = AppFilesJs.ModuleList;

var ModuleList = {
  make: make$1
};

var make$2 = AppFilesJs.ShowModule;

var ShowModule = {
  make: make$2
};

var make$3 = AppFilesJs.Tabs;

var Tabs = {
  make: make$3
};

var styles = ReactNative.StyleSheet.create({
      container: {
        flex: 1,
        backgroundColor: "#fff",
        height: window.innerHeight
      },
      centeredContent: {
        alignItems: "center"
      }
    });

function App$LoadedApp(Props) {
  var json = Props.json;
  var match = React.useState(function () {
        return "chunks";
      });
  var setTab = match[1];
  var currentTab = match[0];
  return React.createElement(ReactNative.View, {
              style: styles.container,
              children: null
            }, React.createElement(ReactNative.View, {
                  style: styles.centeredContent,
                  children: null
                }, React.createElement($$Text.make, {
                      children: "Open up App.js to start working on your app!"
                    }), React.createElement(ReactRouterDom.Route, {
                      render: (function (param) {
                          return React.createElement(make$3, {
                                      match: param.match,
                                      currentTab: currentTab,
                                      setTab: setTab
                                    });
                        })
                    })), React.createElement(ReactRouterDom.Switch, {
                  children: null
                }, React.createElement(ReactRouterDom.Route, {
                      path: "/",
                      exact: true,
                      render: (function (param) {
                          return React.createElement(ChunkList.make, {
                                      json: json,
                                      match: param.match
                                    });
                        })
                    }), React.createElement(ReactRouterDom.Route, {
                      path: "/chunks",
                      exact: true,
                      render: (function (param) {
                          return React.createElement(ChunkList.make, {
                                      json: json,
                                      match: param.match
                                    });
                        })
                    }), React.createElement(ReactRouterDom.Route, {
                      path: "/chunks/:chunkID",
                      exact: true,
                      render: (function (param) {
                          return React.createElement(make, {
                                      match: param.match,
                                      json: json
                                    });
                        })
                    }), React.createElement(ReactRouterDom.Route, {
                      path: "/modules",
                      exact: true,
                      render: (function (param) {
                          return React.createElement(make$1, {
                                      match: param.match,
                                      json: json
                                    });
                        })
                    }), React.createElement(ReactRouterDom.Route, {
                      path: "/modules/:moduleID",
                      exact: true,
                      render: (function (param) {
                          return React.createElement(make$2, {
                                      match: param.match,
                                      json: json
                                    });
                        })
                    }), React.createElement(ReactRouterDom.Route, {
                      path: "/modules/:moduleID/:subModuleIndex",
                      exact: true,
                      render: (function (param) {
                          return React.createElement(make$2, {
                                      match: param.match,
                                      json: json
                                    });
                        })
                    })));
}

var LoadedApp = {
  make: App$LoadedApp
};

function App(Props) {
  var nullableJson = AppFilesJs.useStatJSON();
  window.json = nullableJson;
  console.log("json", nullableJson);
  if (nullableJson == null) {
    return React.createElement(ReactNative.ActivityIndicator, {});
  } else {
    return React.createElement(ReactRouterDom.BrowserRouter, {
                children: React.createElement(App$LoadedApp, {
                      json: nullableJson
                    })
              });
  }
}

var make$4 = App;

var $$default = App;

export {
  useStatJSON ,
  ShowChunk ,
  ModuleList ,
  ShowModule ,
  Tabs ,
  styles ,
  LoadedApp ,
  make$4 as make,
  $$default ,
  $$default as default,
  
}
/* make Not a pure module */
