// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Link from "./Link.bs.js";
import * as $$Text from "./Text.bs.js";
import * as React from "react";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";

var appProjectRoot = "/Users/juspay/Code/juspay/rescript-euler-dashboard";

var babelPrefix = "npm@/babel-loader/lib/index.js!";

function moduleItem(optionalParentModuleOpt, arg) {
  var optionalParentModule = optionalParentModuleOpt !== undefined ? Caml_option.valFromOption(optionalParentModuleOpt) : undefined;
  var item = arg.item;
  var index = String(arg.index);
  var __x = item.identifier;
  var __x$1 = __x.replace(new RegExp(appProjectRoot + "/node_modules", "g"), "npm@");
  var __x$2 = __x$1.replace(new RegExp(appProjectRoot, "g"), "MarketV2@");
  var __x$3 = __x$2.replace(new RegExp(babelPrefix, "g"), "babel << ");
  var str = __x$3.replace(/ [a-z0-9]{32}/, "");
  var optionalParentModuleID = Belt_Option.map(Belt_Option.flatMap(optionalParentModule, (function (parentModule) {
              return Caml_option.nullable_to_opt(parentModule.id);
            })), (function (prim) {
          return String(prim);
        }));
  var parentModuleIDStr = Belt_Option.getWithDefault(optionalParentModuleID, "--");
  var moduleId = item.id;
  var idVal = (moduleId == null) ? parentModuleIDStr + "<" + index + ">" : String(moduleId);
  var idStr = ("M" + idVal).padStart(6);
  var sizeStr = String(item.size).padStart(6);
  var to_;
  if (optionalParentModuleID !== undefined) {
    to_ = "/modules/" + optionalParentModuleID + "/" + index;
  } else {
    var moduleId$1 = Belt_Option.map(Caml_option.nullable_to_opt(item.id), (function (prim) {
            return String(prim);
          }));
    to_ = moduleId$1 !== undefined ? "/modules/" + moduleId$1 : "/modules/";
  }
  return React.createElement($$Text.make, {
              children: null
            }, React.createElement(Link.make, {
                  to: to_,
                  children: idStr
                }), ": [size: " + sizeStr + "]: " + str);
}

export {
  appProjectRoot ,
  babelPrefix ,
  moduleItem ,
  
}
/* Link Not a pure module */
